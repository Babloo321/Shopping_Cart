{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Babloo\\\\Desktop\\\\Practice\\\\redux_project\\\\ShoopingCartUI\\\\src\\\\components\\\\Products\\\\Product\\\\Product.js\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\"; // import {\n//   loadCurrentItem,\n//   addToCart,\n// } from \"../../../redux/Shopping/shopping-actions\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport './Product.css';\nimport * as actionTypes from '../../../redux/action';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginBottom: '5%'\n  },\n  media: {\n    height: '40vh'\n  }\n});\n\nfunction Product2({\n  product,\n  addToCart,\n  loadCurrentItem\n}) {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleOnClick = () => {\n    loadCurrentItem(product);\n    history.push(`/product/${product.id}`); // history.push({\n    //   pathname:`/product/${product.id}`,\n    //   state: product\n    // })\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: product.image,\n    title: product.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardstyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, product.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    style: {\n      height: '26vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, product.description), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, product.price, \"\\xA0\\u20B9\")), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: handleOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"View Item\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: () => addToCart(product.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Add to Cart\")));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadCurrentItem: item => dispatch({\n      type: actionTypes.Load_Current_Item,\n      payload: {\n        item: item\n      }\n    }),\n    addToCart: id => dispatch({\n      type: actionTypes.Add_To_Cart,\n      payload: {\n        id: id\n      }\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Product2);","map":{"version":3,"sources":["C:/Users/Babloo/Desktop/Practice/redux_project/ShoopingCartUI/src/components/Products/Product/Product.js"],"names":["React","Link","connect","useHistory","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","actionTypes","useStyles","root","maxWidth","marginBottom","media","height","Product2","product","addToCart","loadCurrentItem","history","classes","handleOnClick","push","id","image","title","cardstyle","description","price","mapDispatchToProps","dispatch","item","type","Load_Current_Item","payload","Add_To_Cart"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {\r\n//   loadCurrentItem,\r\n//   addToCart,\r\n// } from \"../../../redux/Shopping/shopping-actions\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './Product.css'\r\nimport * as actionTypes from '../../../redux/action';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n      marginBottom:'5%'\r\n    },\r\n    media: {\r\n      height: '40vh',\r\n    },\r\n  });\r\n\r\nfunction Product2({ product, addToCart, loadCurrentItem }) {\r\n  const history = useHistory();\r\n    const classes = useStyles();\r\n    const handleOnClick = ()=>{\r\n      loadCurrentItem(product);\r\n      history.push(`/product/${product.id}`)\r\n      // history.push({\r\n      //   pathname:`/product/${product.id}`,\r\n      //   state: product\r\n      // })\r\n      \r\n    }\r\n    return (\r\n        <Card className={classes.root}>\r\n      \r\n          <CardMedia\r\n            className={classes.media}\r\n            image={product.image}\r\n            title={product.title}\r\n            \r\n          />\r\n          <CardContent className={classes.cardstyle}>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {product.title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{height: '26vh'}}>\r\n              {product.description}\r\n            </Typography>\r\n            <br/>\r\n            <Typography variant=\"h5\" align='center' color=\"textPrimary\" >\r\n              {product.price}&nbsp;â‚¹\r\n            </Typography>\r\n          </CardContent>\r\n       \r\n        <CardActions >\r\n      \r\n          <Button  size=\"small\" color=\"primary\" onClick={handleOnClick}>\r\n            View Item\r\n          </Button>\r\n          \r\n          <Button size=\"small\" color=\"primary\" onClick={() => addToCart(product.id)}>\r\n            Add to Cart\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n  return {\r\n    loadCurrentItem : (item) => dispatch({type:actionTypes.Load_Current_Item, payload: {item:item}}),\r\n    addToCart: (id) => dispatch({type: actionTypes.Add_To_Cart, payload:{id:id}})\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps) (Product2);"]},"metadata":{},"sourceType":"module"}